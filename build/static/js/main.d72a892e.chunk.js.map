{"version":3,"sources":["components/LoginButton/LoginButton.module.css","components/Header/Header.module.css","pages/Login.module.css","hooks/useTypedSelector.ts","pages/Jog.tsx","api/apiLayer.ts","api/ApiAuth.ts","api/ApiJogs.ts","store/reducers/auth/types.ts","api/index.ts","store/reducers/auth/action-creators.ts","store/reducers/event/types.ts","store/reducers/event/action-creators.ts","router/index.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/LoginButton/LoginButton.tsx","pages/Login.tsx","components/AppRouter/AppRouter.tsx","components/Header/Header.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/event/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","useTypedSelector","useSelector","Jog","API_URL","axios","create","interceptors","request","use","config","newConfig","token","state","auth","accessToken","headers","login","a","post","uuid","response","Error","AuthActionEnum","line","ApiJogs","ApiAuth","JogActionEnum","AuthActionCreators","setIsAuth","type","SET_AUTH","payload","setIsLoading","SET_IS_LOADING","setError","SET_ERROR","dispatch","api","localStorage","setItem","data","access_token","RouteNames","JogActionCreators","setJogs","SET_JOGS","createJog","event","events","getItem","json","JSON","parse","push","stringify","e","console","log","allActionCreators","useActions","useDispatch","bindActionCreators","LoginButton","className","styles","box","src","role","svg","button","onClick","Login","main","publicRoutes","path","LOGIN","exact","component","INFO","CONTACT","privateRoutes","JOGS","AppRouter","isAuth","map","route","to","Header","header","menu","logo","App","useEffect","initialState","error","isLoading","jogs","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,IAAM,yBAAyB,OAAS,8B,mBCA1DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,mBCAzDD,EAAOC,QAAU,CAAC,KAAO,sB,qHCGZC,EAAoDC,I,OCElDC,EAJC,WACd,OAAO,0C,yECyBIC,EACJ,yBCxBgBC,IAAMC,SAEdC,aAAaC,QAAQC,KAAI,SAACC,GACzC,IAAMC,EAAS,eAAQD,GAEjBE,EADkBX,GAAiB,SAAAY,GAAK,OAAIA,EAAMC,QAAhDC,YAQR,OALIH,IAEFD,EAAUK,QAAV,cAAqC,UAAYJ,GAG5CD,K,IAmBM,M,sCAfbM,M,sBAAQ,4BAAAC,EAAA,+EAEgDb,IAAMc,KAAN,UDGlC,oCCHkC,OACpCf,GACd,CACEgB,KAAM,UALN,cAEEC,EAFF,yBASGA,GATH,sCAWE,IAAIC,MAXN,0DChBejB,IAAMC,SAEdC,aAAaC,QAAQC,KAAI,SAACC,GACzC,IAAMC,EAAS,eAAQD,GAEjBE,EADkBX,GAAiB,SAAAY,GAAK,OAAIA,EAAMC,QAAhDC,YAQR,OALIH,IAEFD,EAAUK,QAAV,cAAqC,UAAYJ,GAG5CD,K,ICVGY,ED6BG,M,sCAfbN,M,sBAAQ,4BAAAC,EAAA,+EAEgDb,IAAMc,KAAN,UAC/Cf,GACH,CACEoB,KAAM,KALN,cAEEH,EAFF,yBASGA,GATH,sCAWE,IAAIC,MAXN,0DEZK,M,sCAJbG,QAAUA,E,KACVC,QAAUA,I,SDCAH,K,oBAAAA,E,sBAAAA,E,oBAAAA,E,iCAAAA,M,KEEL,ICHKI,EDGCC,EAAqB,CAChCC,UAAW,SAACf,GAAD,MAAmC,CAC5CgB,KAAMP,EAAeQ,SACrBC,QAASlB,IAEXmB,aAAc,SAACD,GAAD,MAA2C,CACvDF,KAAMP,EAAeW,eACrBF,YAEFG,SAAU,SAACH,GAAD,MAAsC,CAC9CF,KAAMP,EAAea,UACrBJ,YAEFf,MACE,yDACA,WAAOoB,GAAP,eAAAnB,EAAA,sEAEImB,EAAST,EAAmBK,cAAa,IAF7C,SAG2BK,EAAIZ,QAAQT,QAHvC,QAGUI,EAHV,SAKMkB,aAAaC,QACX,eACAnB,EAASoB,KAAKpB,SAASqB,cAEzBL,EAAST,EAAmBC,WAAU,KAEtCQ,EAAST,EAAmBO,SAAS,4GAEvCE,EAAST,EAAmBK,cAAa,IAb7C,gDAeII,EAAST,EAAmBO,SAAS,wJAfzC,yDADA,yD,SCjBQR,K,qBAAAA,M,KCFL,ICOKgB,EDPCC,EAAoB,CAC/BC,QAAS,SAACb,GAAD,MAAqC,CAC5CF,KAAMH,EAAcmB,SACpBd,YAEFe,UACE,SAACC,GAAD,OACA,SAACX,GACC,IACE,IAAMY,EAASV,aAAaW,QAAQ,WAAa,KAC3CC,EAAOC,KAAKC,MAAMJ,GACxBE,EAAKG,KAAKN,GACVX,EAASO,EAAkBC,QAAQM,IACnCZ,aAAaC,QAAQ,SAAUY,KAAKG,UAAUJ,IAC9C,MAAOK,GACPC,QAAQC,IAAIF,OEhBPG,EAAiB,2BACzB/B,GACAgB,GCCQgB,EAAa,WACxB,IAAMvB,EAAWwB,cACjB,OAAOC,YAAmBH,EAAmBtB,I,iBCmBhC0B,EArBS,WACtB,IAAQ9C,EAAU2C,IAAV3C,MAKR,OACE,sBAAK+C,UAAWC,IAAOC,IAAvB,UACE,cAAC,IAAD,CACEC,IAAI,4BACJ,aAAW,OACXC,KAAK,MACLJ,UAAWC,IAAOI,MAEpB,wBAAQL,UAAWC,IAAOK,OAAQC,QAZlB,WAClBtD,KAWE,2B,iBCPSuD,EARG,WAChB,OACE,qBAAKR,UAAWC,IAAOQ,KAAvB,SACE,cAAC,EAAD,Q,SJGM9B,K,eAAAA,E,SAAAA,E,aAAAA,E,oBAAAA,M,KAOL,IAAM+B,EAAyB,CACpC,CAAEC,KAAMhC,EAAWiC,MAAOC,OAAO,EAAMC,UAAWN,GAClD,CAAEG,KAAMhC,EAAWoC,KAAMF,OAAO,EAAMC,UAAW3E,GACjD,CAAEwE,KAAMhC,EAAWqC,QAASH,OAAO,EAAMC,UAAW3E,IAGzC8E,EAA0B,CACrC,CAAEN,KAAMhC,EAAWuC,KAAML,OAAO,EAAMC,UAAW3E,IKWpCgF,EA9BO,WAGpB,OAFmBlF,GAAiB,SAAAY,GAAK,OAAIA,EAAMC,QAA3CsE,OAGN,eAAC,IAAD,WACGH,EAAcI,KAAI,SAAAC,GAAK,OACtB,cAAC,IAAD,CACEX,KAAMW,EAAMX,KACZE,MAAOS,EAAMT,MACbC,UAAWQ,EAAMR,WACZQ,EAAMX,SAGf,cAAC,IAAD,CAAUY,GAAI5C,EAAWuC,UAG3B,eAAC,IAAD,WACGR,EAAaW,KAAI,SAAAC,GAAK,OACrB,cAAC,IAAD,CACEX,KAAMW,EAAMX,KACZE,MAAOS,EAAMT,MACbC,UAAWQ,EAAMR,WACZQ,EAAMX,SAGf,cAAC,IAAD,CAAUY,GAAI5C,EAAWiC,Y,iBCChBY,EAxBI,WACjB,IAAQJ,EAAWnF,GAAiB,SAAAY,GAAK,OAAIA,EAAMC,QAA3CsE,OAER,OACE,qBAAKpB,UAAWC,IAAOwB,OAAvB,SACIL,EASA,sBAAKpB,UAAWC,IAAOyB,KAAvB,UACE,cAAC,IAAD,CAAMH,GAAI5C,EAAWuC,KAArB,oBACA,cAAC,IAAD,CAAMK,GAAI5C,EAAWoC,KAArB,oBACA,cAAC,IAAD,CAAMQ,GAAI5C,EAAWqC,QAArB,4BAXF,qBAAKhB,UAAWC,IAAO0B,KAAvB,SACE,cAAC,IAAD,CACExB,IAAI,4BACJ,aAAW,OACXC,KAAK,aCKFwB,EAjBC,WACd,IAAQ/D,EAAc+B,IAAd/B,UAQR,OANAgE,qBAAU,WACJtD,aAAaW,QAAQ,SACvBrB,GAAU,MAKZ,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,QChBAiE,EAA0B,CAC9BV,QAAQ,EACRW,MAAO,GACPC,WAAW,EACXjF,YAAa,ICJf,IAAM+E,EAAyB,CAC7BG,KAAM,ICAO,OACbnF,KFKa,WAGD,IAFZD,EAEW,uDAFHiF,EACRI,EACW,uCACX,OAAQA,EAAOpE,MACb,KAAKP,EAAeQ,SAClB,OAAO,2BAAKlB,GAAZ,IAAmBuE,OAAQc,EAAOlE,QAASgE,WAAW,IACxD,KAAKzE,EAAea,UAClB,OAAO,2BAAKvB,GAAZ,IAAmBkF,MAAOG,EAAOlE,QAASgE,WAAW,IACvD,KAAKzE,EAAeW,eAClB,OAAO,2BAAKrB,GAAZ,IAAmBmF,UAAWE,EAAOlE,UACvC,QACE,OAAOnB,IEhBXmC,MDCa,WAGF,IAFXnC,EAEU,uDAFFiF,EACRI,EACU,uCACV,OAAQA,EAAOpE,MACb,KAAKH,EAAcmB,SACjB,OAAO,2BAAKjC,GAAZ,IAAmBoF,KAAMC,EAAOlE,UAClC,QACE,OAAOnB,KETPsF,EAAcC,YAAgBC,GAEvBC,EAAQC,YAAYJ,EAAaK,YAAgBC,MCE9DC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.d72a892e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"LoginButton_box__2ic9J\",\"button\":\"LoginButton_button__2nWmP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"logo\":\"Header_logo__3_SJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Login_main__14HFn\"};","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\n\nimport { RootState } from \"../store\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { FC } from \"react\";\n\nconst Jog: FC = () => {\n  return <div> Jogs </div>;\n};\n\nexport default Jog;\n","import { AxiosResponse } from \"axios\";\n\nexport interface IDelivery {\n  ApiJogs: IApiJogs;\n  ApiAuth: IApiAuth;\n}\n\nexport interface IApiAuth {\n  login: () => Promise<AxiosResponse<ApiUserLogin>>;\n}\n\nexport interface IApiJogs {\n  login: () => Promise<AxiosResponse<ApiUserLogin>>;\n}\n\nexport type ApiUserLogin = {\n  response: {\n    access_token: string;\n    token_type: string;\n    expires_in: number;\n    scope: string;\n    created_at: number;\n  };\n  timestamp: number;\n};\n\nexport const ROOT_URL = \"https://jogtracker.herokuapp.com\";\n\nexport const API_URL = {\n  login: \"/api/v1/auth/uuidLogin\",\n};\n","import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\n\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { API_URL, ApiUserLogin, IApiAuth, ROOT_URL } from \"./apiLayer\";\n\nconst axiosApiInstance = axios.create();\n\naxiosApiInstance.interceptors.request.use((config: AxiosRequestConfig) => {\n  const newConfig = { ...config };\n  const { accessToken } = useTypedSelector(state => state.auth);\n  const token = accessToken;\n\n  if (token) {\n    // eslint-disable-next-line\n    newConfig.headers[\"Authorization\"] = \"Bearer \" + token;\n  }\n\n  return newConfig;\n});\n\nclass ApiAuth implements IApiAuth {\n  login = async (): Promise<AxiosResponse<ApiUserLogin>> => {\n    try {\n      const response: AxiosResponse<ApiUserLogin> = await axios.post(\n        `${ROOT_URL}${API_URL.login}`,\n        {\n          uuid: \"hello\",\n        }\n      );\n\n      return response;\n    } catch (e) {\n      throw new Error();\n    }\n  };\n}\nexport default new ApiAuth();\n","import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\n\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { API_URL, ApiUserLogin, IApiAuth } from \"./apiLayer\";\n\nconst axiosApiInstance = axios.create();\n\naxiosApiInstance.interceptors.request.use((config: AxiosRequestConfig) => {\n  const newConfig = { ...config };\n  const { accessToken } = useTypedSelector(state => state.auth);\n  const token = accessToken;\n\n  if (token) {\n    // eslint-disable-next-line\n    newConfig.headers[\"Authorization\"] = \"Bearer \" + token;\n  }\n\n  return newConfig;\n});\n\nclass ApiJogs implements IApiAuth {\n  login = async (): Promise<AxiosResponse<ApiUserLogin>> => {\n    try {\n      const response: AxiosResponse<ApiUserLogin> = await axios.post(\n        `${API_URL.login}`,\n        {\n          line: \"\",\n        }\n      );\n\n      return response;\n    } catch (e) {\n      throw new Error();\n    }\n  };\n}\nexport default new ApiJogs();\n","export interface AuthState {\n  isAuth: boolean;\n  isLoading: boolean;\n  error: string;\n  accessToken: string;\n}\n\nexport enum AuthActionEnum {\n  SET_AUTH = \"SET_AUTH\",\n  SET_ERROR = \"SET_ERROR\",\n  SET_USER = \"SET_USER\",\n  SET_IS_LOADING = \"SET_IS_LOADING\",\n}\n\nexport interface SetAuthAction {\n  type: AuthActionEnum.SET_AUTH;\n  payload: boolean;\n}\nexport interface SetErrorAction {\n  type: AuthActionEnum.SET_ERROR;\n  payload: string;\n}\nexport interface SetIsLoadingAction {\n  type: AuthActionEnum.SET_IS_LOADING;\n  payload: boolean;\n}\n\nexport type AuthAction = SetAuthAction | SetErrorAction | SetIsLoadingAction;\n","import ApiAuth from \"./ApiAuth\";\nimport ApiJogs from \"./ApiJogs\";\nimport { IDelivery } from \"./apiLayer\";\n\nclass Delivery implements IDelivery {\n  ApiJogs = ApiJogs;\n  ApiAuth = ApiAuth;\n}\n\nexport default new Delivery();\n","import api from \"../../../api\";\nimport { AppDispatch } from \"../../index\";\nimport {\n  AuthActionEnum,\n  SetAuthAction,\n  SetErrorAction,\n  SetIsLoadingAction,\n} from \"./types\";\n\nexport const AuthActionCreators = {\n  setIsAuth: (auth: boolean): SetAuthAction => ({\n    type: AuthActionEnum.SET_AUTH,\n    payload: auth,\n  }),\n  setIsLoading: (payload: boolean): SetIsLoadingAction => ({\n    type: AuthActionEnum.SET_IS_LOADING,\n    payload,\n  }),\n  setError: (payload: string): SetErrorAction => ({\n    type: AuthActionEnum.SET_ERROR,\n    payload,\n  }),\n  login:\n    () =>\n    async (dispatch: AppDispatch): Promise<void> => {\n      try {\n        dispatch(AuthActionCreators.setIsLoading(true));\n        const response = await api.ApiAuth.login();\n        if (response) {\n          localStorage.setItem(\n            \"access_token\",\n            response.data.response.access_token\n          );\n          dispatch(AuthActionCreators.setIsAuth(true));\n        } else {\n          dispatch(AuthActionCreators.setError(\"Некорректный токен\"));\n        }\n        dispatch(AuthActionCreators.setIsLoading(false));\n      } catch (e) {\n        dispatch(AuthActionCreators.setError(\"Произошла ошибка при логине\"));\n      }\n    },\n};\n","import { IJog } from \"../../../models/IJog\";\n\nexport interface JogState {\n  jogs: IJog[];\n}\n\nexport enum JogActionEnum {\n  SET_JOGS = \"SET_JOGS\",\n}\n\nexport interface SetJogsAction {\n  type: JogActionEnum.SET_JOGS;\n  payload: IJog[];\n}\n\nexport type JogAction = SetJogsAction;\n","import { IJog } from \"../../../models/IJog\";\nimport { AppDispatch } from \"../../index\";\nimport { JogActionEnum, SetJogsAction } from \"./types\";\n\nexport const JogActionCreators = {\n  setJogs: (payload: IJog[]): SetJogsAction => ({\n    type: JogActionEnum.SET_JOGS,\n    payload,\n  }),\n  createJog:\n    (event: IJog) =>\n    (dispatch: AppDispatch): void => {\n      try {\n        const events = localStorage.getItem(\"events\") || \"[]\";\n        const json = JSON.parse(events) as IJog[];\n        json.push(event);\n        dispatch(JogActionCreators.setJogs(json));\n        localStorage.setItem(\"events\", JSON.stringify(json));\n      } catch (e) {\n        console.log(e);\n      }\n    },\n};\n","import React from \"react\";\n\nimport Jog from \"../pages/Jog\";\nimport Login from \"../pages/Login\";\n\nexport interface IRoute {\n  path: string;\n  component: React.ComponentType;\n  exact?: boolean;\n}\n\nexport enum RouteNames {\n  LOGIN = \"/login\",\n  JOGS = \"/\",\n  INFO = \"/info\",\n  CONTACT = \"/contact\",\n}\n\nexport const publicRoutes: IRoute[] = [\n  { path: RouteNames.LOGIN, exact: true, component: Login },\n  { path: RouteNames.INFO, exact: true, component: Jog },\n  { path: RouteNames.CONTACT, exact: true, component: Jog },\n];\n\nexport const privateRoutes: IRoute[] = [\n  { path: RouteNames.JOGS, exact: true, component: Jog },\n];\n","import { AuthActionCreators } from \"./auth/action-creators\";\nimport { JogActionCreators } from \"./event/action-creators\";\n\nexport const allActionCreators = {\n  ...AuthActionCreators,\n  ...JogActionCreators,\n};\n","import { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { allActionCreators } from \"../store/reducers/action-creators\";\n\n// eslint-disable-next-line\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(allActionCreators, dispatch);\n};\n","import { FC } from \"react\";\nimport { ReactSVG } from \"react-svg\";\n\nimport { useActions } from \"../../hooks/useActions\";\nimport styles from \"./LoginButton.module.css\";\n\nconst LoginButton: FC = () => {\n  const { login } = useActions();\n  const handleClick = () => {\n    login();\n  };\n\n  return (\n    <div className={styles.box}>\n      <ReactSVG\n        src=\"./src/assets/img/bear.svg\"\n        aria-label=\"Logo\"\n        role=\"img\"\n        className={styles.svg}\n      />\n      <button className={styles.button} onClick={handleClick}>\n        Let me in\n      </button>\n    </div>\n  );\n};\n\nexport default LoginButton;\n","import { FC } from \"react\";\n\nimport LoginButton from \"../components/LoginButton/LoginButton\";\nimport styles from \"./Login.module.css\";\n\nconst Login: FC = () => {\n  return (\n    <div className={styles.main}>\n      <LoginButton />\n    </div>\n  );\n};\n\nexport default Login;\n","import { FC } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { privateRoutes, publicRoutes, RouteNames } from \"../../router\";\n\nconst AppRouter: FC = () => {\n  const { isAuth } = useTypedSelector(state => state.auth);\n\n  return isAuth ? (\n    <Switch>\n      {privateRoutes.map(route => (\n        <Route\n          path={route.path}\n          exact={route.exact}\n          component={route.component}\n          key={route.path}\n        />\n      ))}\n      <Redirect to={RouteNames.JOGS} />\n    </Switch>\n  ) : (\n    <Switch>\n      {publicRoutes.map(route => (\n        <Route\n          path={route.path}\n          exact={route.exact}\n          component={route.component}\n          key={route.path}\n        />\n      ))}\n      <Redirect to={RouteNames.LOGIN} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ReactSVG } from \"react-svg\";\n\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { RouteNames } from \"../../router\";\nimport styles from \"./Header.module.css\";\n\nconst Header: FC = () => {\n  const { isAuth } = useTypedSelector(state => state.auth);\n\n  return (\n    <nav className={styles.header}>\n      {!isAuth ? (\n        <div className={styles.logo}>\n          <ReactSVG\n            src=\"./src/assets/img/logo.svg\"\n            aria-label=\"Logo\"\n            role=\"img\"\n          />\n        </div>\n      ) : (\n        <div className={styles.menu}>\n          <Link to={RouteNames.JOGS}> Jogs </Link>\n          <Link to={RouteNames.INFO}> INFO </Link>\n          <Link to={RouteNames.CONTACT}>Contatcy Us</Link>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default Header;\n","import { FC, useEffect } from \"react\";\n\nimport AppRouter from \"./components/AppRouter/AppRouter\";\nimport Header from \"./components/Header/Header\";\nimport { useActions } from \"./hooks/useActions\";\n\nconst App: FC = () => {\n  const { setIsAuth } = useActions();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      setIsAuth(true);\n    }\n  });\n\n  return (\n    <div>\n      <Header />\n      <AppRouter />\n    </div>\n  );\n};\n\nexport default App;\n","import { AuthAction, AuthActionEnum, AuthState } from \"./types\";\n\nconst initialState: AuthState = {\n  isAuth: false,\n  error: \"\",\n  isLoading: false,\n  accessToken: \"\",\n};\n\nexport default function authReducer(\n  state = initialState,\n  action: AuthAction\n): AuthState {\n  switch (action.type) {\n    case AuthActionEnum.SET_AUTH:\n      return { ...state, isAuth: action.payload, isLoading: false };\n    case AuthActionEnum.SET_ERROR:\n      return { ...state, error: action.payload, isLoading: false };\n    case AuthActionEnum.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n}\n","import { JogAction, JogActionEnum, JogState } from \"./types\";\n\nconst initialState: JogState = {\n  jogs: [],\n};\n\nexport default function JogReducer(\n  state = initialState,\n  action: JogAction\n): JogState {\n  switch (action.type) {\n    case JogActionEnum.SET_JOGS:\n      return { ...state, jogs: action.payload };\n    default:\n      return state;\n  }\n}\n","import auth from \"./auth\";\nimport event from \"./event\";\n\nexport default {\n  auth,\n  event,\n};\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\nconst rootReducer = combineReducers(reducers);\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import \"./index.css\";\n\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}